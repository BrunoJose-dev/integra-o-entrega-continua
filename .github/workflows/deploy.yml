name: Build and Deploy Dockerized Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:

    - name: Verificação
      uses: actions/checkout@v3

      # 2. Configurar Node.js para evitar problemas de compatibilidade
    - name: Configurar Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/trabalhoIntegracaoEntrega:latest .

    - name: Push Docker image to DockerHub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/trabalhoIntegracaoEntrega:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Install SSH Client
      run: sudo apt-get install -y ssh

    - name: Deploy to Remote Server
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/trabalhoIntegracaoEntrega:latest
          docker stop trabalhoIntegracaoEntrega || true
          docker rm trabalhoIntegracaoEntrega || true
          docker run -d -p 8084:3000 --name trabalhoIntegracaoEntrega ${{ secrets.DOCKER_USERNAME }}/trabalhoIntegracaoEntrega:latest
